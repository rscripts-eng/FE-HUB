local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
local Window = Fluent:CreateWindow({
    Title = "Bloxy developments " .. Fluent.Version,
    SubTitle = "NEWEST VERSION OF FE HUB!",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Light",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})
local Tabs = {
    Main = Window:AddTab({ Title = "FE Hub", Icon = "" })
}

    Tabs.Main:AddButton({
        Title = "Infinite yield reborn",
        Description = "Runs infinite yield reborn version",
        Callback = function()
            Window:Dialog({
                Title = "Execute",
                Content = "Executing this will execute infinite yield reborn version!",
                Buttons = {
                    {
                        Title = "Confirm",
                        Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/fuckusfm/infiniteyield-reborn/master/source'))()
                            print("Executed infinite yield reborn.")
                        end
                    },
                    {
                        Title = "Cancel",
                        Callback = function()
    Fluent:Notify({
        Title = "Cancelled",
        Content = "You cancelled execution.",
        SubContent = "EXEC-DECLINED", -- Optional
        Duration = 5 -- Set to nil to make the notification not disappear
    })

                            print("Cancelled the dialog.")
                        end
                    }
                }
            })
        end
    })
Tabs.Main:AddButton({
        Title = "Nameless admin",
        Description = "An admin script like inf yield reborn, but has quite a few trolling commands.",
        Callback = function()
            Window:Dialog({
                Title = "Execute",
                Content = "Executing this will run Nameless admin!",
                Buttons = {
                    {
                        Title = "Confirm",
                        Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/FilteringEnabled/NamelessAdmin/main/Source"))()
                            print("Executed nameless admin.")
                        end
                    },
                    {
                        Title = "Cancel",
                        Callback = function()
    Fluent:Notify({
        Title = "Cancelled",
        Content = "You cancelled execution.",
        SubContent = "EXEC-DECLINED", -- Optional
        Duration = 5 -- Set to nil to make the notification not disappear
    })
                            print("Cancelled the dialog.")
                        end
                    }
                }
            })
        end
    })
local Tabs = {
    Main = Window:AddTab({ Title = "Anti banning", Icon = "" }),
}

    Tabs.Main:AddButton({
        Title = "Anti ban",
        Description = "This removes banning system from games!",
        Callback = function()
            Window:Dialog({
                Title = "Execute",
                Content = "Executing this will run our built in anti ban",
                Buttons = {
                    {
                        Title = "Confirm",
                        Callback = function()
    Fluent:Notify({
        Title = "Executed anti ban",
        Content = "Anti ban executed successfully.",
        SubContent = "EXEC-ACCEPTED", -- Optional
        Duration = 5 -- Set to nil to make the notification not disappear
    })
                            print("Anti ban made by Aafak102333DIO!!!!1!!")
                        end
                    },
                    {
                        Title = "Cancel",
                        Callback = function()
    Fluent:Notify({
        Title = "Cancelled",
        Content = "You cancelled execution.",
        SubContent = "EXEC-DECLINED", -- Optional
        Duration = 5 -- Set to nil to make the notification not disappear
    })
                            print("Cancelled the dialog.")
                        end
                    }
                }
            })
        end
    })
    Tabs.Main:AddButton({
        Title = "FE CHAT BYPASSER",
        Description = "Had enough of tags? go ahead and execute this",
        Callback = function()
            Window:Dialog({
                Title = "Execute",
                Content = "This will execute fe chat bypasser",
                Buttons = {
                    {
                        Title = "Confirm",
                        Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/BakaPraselol/MRCBV4LSB4KRS/main/Loader"))()
wait(1)
loadstring(game:HttpGet("https://raw.githubusercontent.com/BakaPraselol/MRCBV4LSB4KRS/main/Loader"))()
                            print("Confirmed the dialog.")
                        end
                    },
                    {
                        Title = "Cancel",
                        Callback = function()
    Fluent:Notify({
        Title = "Cancelled",
        Content = "You cancelled execution.",
        SubContent = "EXEC-DECLINED", -- Optional
        Duration = 5 -- Set to nil to make the notification not disappear
    })
                            print("Cancelled the dialog.")
                        end
                    }
                }
            })
        end
    })

local Tabs = {
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}
-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)
