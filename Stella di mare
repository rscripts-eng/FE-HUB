print("Connecting to Server...")
wait(0.61)
warn("Server Setup LIVE_JUJUTSUX.HTTP web get detect, Awaiting package extraction")
warn("Key got token API, expected extraction at the moment")
print("Extracting...")
wait(4.9)
local token = "VCM32E6Vm4KXZDX"
local secret = "MMM.MMM.MMM.MMM"
local exectype = "IDENTIY"
print("Getting API token...")
wait(1.60)
print("DO NOT SHARE YOUR TOKEN TO ANYONE! Token number: "..token)
print("DONT SHARE Secret number: "..secret)
print("Starting up Script...")
local Release = "1.26"
local bypass = "LIVE"
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "Stella di mare V: "..Release,
   LoadingTitle = "Stella di mare Universal",
   LoadingSubtitle = "Made by Stereo developments!",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Stella di mare Beta System",
      Subtitle = "Key System for the new beta rework",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"UniversalStellaHub"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})
local Tab = Window:CreateTab("Main", 4483362458) -- Title, Image
local Section = Tab:CreateSection("Main")
Rayfield:Notify({
   Title = "Welcome",
   Content = "Welcome to stella di mare, Always use an alt to avoid bans!",
   Duration = 6.5,
   Image = 4483362458,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})
local Button = Tab:CreateButton({
   Name = "Infinite yield",
   Callback = function()
   Rayfield:Notify({
   Title = "Glitch",
   Content = "This has a glitch, use infinite yield from nameless admin by using the command (IY)",
   Duration = 6.5,
   Image = 4483362458,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay, stop",
         Callback = function()
         print("Cancelled execution!")
      end
   },
},
})
   -- The function that takes place when the button is pressed
   end,
})
local Button = Tab:CreateButton({
   Name = "Nameless admin (MOST RECOMMENDED)",
   Callback = function()
   loadstring(game:HttpGet('https://raw.githubusercontent.com/FilteringEnabled/NamelessAdmin/main/Source'))()
   -- The function that takes place when the button is pressed
   end,
})
local Button = Tab:CreateButton({
   Name = "Aimbot",
   Callback = function()
   Rayfield:Notify({
   Title = "PC ONLY",
   Content = "Hold your right click on your PC mouse to start aimbotting!",
   Duration = 6.5,
   Image = 4483362458,
   Actions = { -- Notification Buttons
      Accept = {
         Name = "Launch",
         Callback = function()
   loadstring(game:HttpGet("https://cdn.wearedevs.net/scripts/WRD%20Aimbot.txt"))()
         print("The user tapped Okay!")
      end
   },
    Ignore = {
        Name = "Cancel",
        Callback = function()
        print("Okay")
       end
    },
},
})
   -- The function that takes place when the button is pressed
   end,
})
local Button = Tab:CreateButton({
   Name = "Hamster ball",
   Callback = function()
   local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera

local SPEED_MULTIPLIER = 30
local JUMP_POWER = 60
local JUMP_GAP = 0.3

local character = game.Players.LocalPlayer.Character

for i,v in ipairs(character:GetDescendants()) do
   if v:IsA("BasePart") then
       v.CanCollide = false
   end
end

local ball = character.HumanoidRootPart
ball.Shape = Enum.PartType.Ball
ball.Size = Vector3.new(5,5,5)
local humanoid = character:WaitForChild("Humanoid")
local params = RaycastParams.new()
params.FilterType = Enum.RaycastFilterType.Blacklist
params.FilterDescendantsInstances = {character}

local tc = RunService.RenderStepped:Connect(function(delta)
   ball.CanCollide = true
   humanoid.PlatformStand = true
if UserInputService:GetFocusedTextBox() then return end
if UserInputService:IsKeyDown("W") then
ball.RotVelocity -= Camera.CFrame.RightVector * delta * SPEED_MULTIPLIER
end
if UserInputService:IsKeyDown("A") then
ball.RotVelocity -= Camera.CFrame.LookVector * delta * SPEED_MULTIPLIER
end
if UserInputService:IsKeyDown("S") then
ball.RotVelocity += Camera.CFrame.RightVector * delta * SPEED_MULTIPLIER
end
if UserInputService:IsKeyDown("D") then
ball.RotVelocity += Camera.CFrame.LookVector * delta * SPEED_MULTIPLIER
end
--ball.RotVelocity = ball.RotVelocity - Vector3.new(0,ball.RotVelocity.Y/50,0)
end)

UserInputService.JumpRequest:Connect(function()
local result = workspace:Raycast(
ball.Position,
Vector3.new(
0,
-((ball.Size.Y/2)+JUMP_GAP),
0
),
params
)
if result then
ball.Velocity = ball.Velocity + Vector3.new(0,JUMP_POWER,0)
end
end)

Camera.CameraSubject = ball
humanoid.Died:Connect(function() tc:Disconnect() end)
   -- The function that takes place when the button is pressed
   end,
})
